<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nicefish.mapper.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.nicefish.model.Permission">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="PERMISSION_ID" jdbcType="VARCHAR" property="permissionId" />
    <result column="PERMISSION_CODE" jdbcType="VARCHAR" property="permissionCode" />
    <result column="PERMISSION_DESC" jdbcType="VARCHAR" property="permissionDesc" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PERMISSION_ID, PERMISSION_CODE, PERMISSION_DESC
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from permission
    where PERMISSION_ID = #{permissionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from permission
    where PERMISSION_ID = #{permissionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.nicefish.model.Permission">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into permission (PERMISSION_ID, PERMISSION_CODE, PERMISSION_DESC
      )
    values (#{permissionId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, #{permissionDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nicefish.model.Permission">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        PERMISSION_ID,
      </if>
      <if test="permissionCode != null">
        PERMISSION_CODE,
      </if>
      <if test="permissionDesc != null">
        PERMISSION_DESC,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        #{permissionId,jdbcType=VARCHAR},
      </if>
      <if test="permissionCode != null">
        #{permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="permissionDesc != null">
        #{permissionDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nicefish.model.Permission">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update permission
    <set>
      <if test="permissionCode != null">
        PERMISSION_CODE = #{permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="permissionDesc != null">
        PERMISSION_DESC = #{permissionDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where PERMISSION_ID = #{permissionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nicefish.model.Permission">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update permission
    set PERMISSION_CODE = #{permissionCode,jdbcType=VARCHAR},
      PERMISSION_DESC = #{permissionDesc,jdbcType=VARCHAR}
    where PERMISSION_ID = #{permissionId,jdbcType=VARCHAR}
  </update>

  <select id="findPermissions" resultType="String">
    select DISTINCT p.PERMISSION_CODE from permission p,role r,role_permission rp
    where r.role_id = rp.role_id and rp.permission_id = p.permission_id and r.role_name in
    <foreach close=")" collection="list" index="index" item="role" open="(" separator=",">
      #{role}
    </foreach>

  </select>


</mapper>